fill = safety))+
geom_bar(stat = "identity",
position = position_dodge(),
alpha = 0.75) +
ylim(100,1000) +
geom_text(aes(label = Freq),
fontface = "bold", vjust = 1.5,
position = position_dodge(.9),
size = 4) +
labs(x = "\n Coin Flip Outcome",
y = "Frequency\n",
title = "\n Coin Flip Results \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12),
legend.title = element_text(face="bold", size = 10))
p6 %>% plotly::ggplotly()
p6 <- da %>%
ggplot(mapping = aes(x = clase,
y = freq(),
fill = safety))+
geom_bar(stat = "identity",
position = position_dodge(),
alpha = 0.75) +
ylim(100,1000) +
geom_text(aes(label = Freq),
fontface = "bold", vjust = 1.5,
position = position_dodge(.9),
size = 4) +
labs(x = "\n Coin Flip Outcome",
y = "Frequency\n",
title = "\n Coin Flip Results \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12),
legend.title = element_text(face="bold", size = 10))
p6 %>% plotly::ggplotly()
p6 <- da %>%
ggplot(mapping = aes(x = clase,
y = freq(),
fill = safety))+
geom_bar(stat = "identity",
position = position_dodge(),
alpha = 0.75) +
ylim(100,1000) +
geom_text(aes(label = Freq),
fontface = "bold", vjust = 1.5,
position = position_dodge(.9),
size = 4) +
labs(x = "\n Coin Flip Outcome",
y = "Frequency\n",
title = "\n Coin Flip Results \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12),
legend.title = element_text(face="bold", size = 10))
p6 %>% plotly::ggplotly()
p6 <- da %>%
ggplot(mapping = aes(x = clase,
y = freq(clase),
fill = safety))+
geom_bar(stat = "identity",
position = position_dodge(),
alpha = 0.75) +
ylim(100,1000) +
geom_text(aes(label = Freq),
fontface = "bold", vjust = 1.5,
position = position_dodge(.9),
size = 4) +
labs(x = "\n Coin Flip Outcome",
y = "Frequency\n",
title = "\n Coin Flip Results \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12),
legend.title = element_text(face="bold", size = 10))
p6 %>% plotly::ggplotly()
p6 <- da %>%
ggplot(mapping = aes(x = clase,
y = count(),
fill = safety))+
geom_bar(stat = "identity",
position = position_dodge(),
alpha = 0.75) +
ylim(100,1000) +
geom_text(aes(label = Freq),
fontface = "bold", vjust = 1.5,
position = position_dodge(.9),
size = 4) +
labs(x = "\n Coin Flip Outcome",
y = "Frequency\n",
title = "\n Coin Flip Results \n") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="red", size = 12),
axis.title.y = element_text(face="bold", colour="red", size = 12),
legend.title = element_text(face="bold", size = 10))
p6 %>% plotly::ggplotly()
library(flexdashboard)
library(dplyr)
library(DT)
library(tidyverse)
library(viridis)
library(ggplot2)
library(readr)
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
library(DataExplorer)
ggplot(da, aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
ggtitle("Güvenlik düzeylerine göre kabul edilebilirlik") +
xlab("Araç Sınıfları") +
ylab("Gözlem Sıklıkları")
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
ggtitle("Güvenlik düzeylerine göre kabul edilebilirlik") +
xlab("Araç Sınıfları") +
ylab("Gözlem Sıklıkları")
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
ggtitle("Güvenlik düzeylerine göre kabul edilebilirlik") +
xlab("Araç Sınıfları") +
ylab("Gözlem Sıklıkları")
p5 %>% plotly::ggplotly()
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
xlab("Clase") +
ylab("conteo")
p5 %>% plotly::ggplotly()
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(stat='identity',position = position_dodge()) +
xlab("Clase") +
ylab("conteo")
p5 %>% plotly::ggplotly()
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
xlab("Clase") +
ylab("conteo")
p5 %>% plotly::ggplotly()
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
labs(x = "Clase", y = "Conteo")+
theme_classic()
p5 %>% plotly::ggplotly()
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
labs(x = "Clase", y = "Conteo")+
guides(fill = guide_legend(title = "Seguridad"))+
theme_classic()
p5 %>% plotly::ggplotly()
library(flexdashboard)
library(dplyr)
library(DT)
library(tidyverse)
library(viridis)
library(ggplot2)
library(readr)
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
library(DataExplorer)
df <- read.csv("C:\\Users\\eduar\\OneDrive - Instituto Tecnologico y de Estudios Superiores de Monterrey\\Tec Monterrey Adm TI M\\4. Analisis y minería de datos para la toma de desiciones\\A5\\car_dataset\\car_data.csv")
datos <- df %>%
rename(buying= vhigh,
maint=vhigh.1,
doors=X2,
persons=X2.1,
lug_boot=small,
safety=low,
clase=unacc)
sum(is.na(datos))
str(datos) %>%
knitr::kable()
da <- as.data.frame(unclass(datos),
stringsAsFactors = TRUE)
str(da) %>%
knitr::kable()
p0 <- da %>%
group_by(buying)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(buying)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Precio de compras", y = "Porcentaje")+
theme_classic()
p0 %>% plotly::ggplotly()
p0 <- da %>%
group_by(maint)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(maint)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Precio de mantenimiento", y = "Porcentaje")+
theme_classic()
p0 %>% plotly::ggplotly()
p1 <- da %>%
group_by(doors)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(doors)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Número de puertas", y = "Porcentaje")+
theme_classic()
p1 %>% plotly::ggplotly()
p2 <- da %>%
group_by(persons)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(persons)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=3))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Numero de personas", y = "Porcentaje")+
theme_classic()
p2 %>% plotly::ggplotly()
p3 <- da %>%
group_by(lug_boot)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(lug_boot)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=3))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Tamaño de maletero", y = "Porcentaje")+
theme_classic()
p3 %>% plotly::ggplotly()
p4 <- da %>%
group_by(safety)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(safety)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=3))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Tamaño de maletero", y = "Porcentaje")+
theme_classic()
p4 %>% plotly::ggplotly()
p5 <- da %>%
group_by(clase)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(clase)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Tamaño de clase", y = "Porcentaje")+
theme_classic()
p5 %>% plotly::ggplotly()
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
labs(x = "Clase", y = "Conteo")+
guides(fill = guide_legend(title = "Seguridad"))+
theme_classic()
p5 %>% plotly::ggplotly()
library(flexdashboard)
library(readr)
library(class)
library(gmodels)
library(dplyr)
library(DT)
library(shiny)
library(ggplot2)
library(gridExtra)
library(viridis)
library(scales)
library(caret)
wdbc <- read.csv("C:\\Users\\eduar\\OneDrive - Instituto Tecnologico y de Estudios Superiores de Monterrey\\Tec Monterrey Adm TI M\\4. Analisis y minería de datos para la toma de desiciones\\A4\\wdbc.csv")
df <- wdbc %>%
rename(id = V1,
diagnosis = V2,
radius_mean = V3,
texture_mean = V4,
perimeter_mean = V5,
area_mean = V6,
smoothness_mean = V7,
compactness_mean = V8,
concavity_mean = V9,
concave.point_mean = V10,
symmetry_mean = V11,
fractal.dimension_mean = V12,
radius_se = V13,
texture_se = V14,
perimeter_se = V15,
area_se = V16,
smoothness_se = V17,
compactness_se = V18,
concavity_se = V19,
concave.point_se = V20,
symmetry_se = V21,
fractal.dimension_se = V22,
radius_worst = V23,
texture_worst = V24,
perimeter_worst = V25,
area_worst = V26,
smoothness_worst = V27,
compactness_worst = V28,
concavity_worst = V29,
concave.point_worst = V30,
symmetry_worst = V31,
fractal.dimension_worst = V32)
str(wdbc) %>%
knitr::kable()
datos <- select(df,-id)
table(datos$diagnosis)
round(prop.table(table(datos$diagnosis)) * 100, digits = 1)
sum(is.na(datos))
resumen1 <- head(datos)
knitr::kable(resumen1)
statss.df <- as.data.frame(apply(select(datos,-diagnosis),2,summary))
knitr::kable(statss.df, digits = 4)
correlacion <- cor(select(datos,-diagnosis))
knitr::kable(correlacion, digits = 4)
dat <- datos
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
new.dat <- as.data.frame(lapply(select(dat,-diagnosis), normalize))
knitr::kable(dat, digits = 4)
set.seed(123) #semillero para 80/20
size <- floor(0.7*nrow(dat))  #Tamaño del training data
dat_train <- new.dat[1:429,]
dat_test <- new.dat[430:569,]
dat_train_labels <- dat[1:429, 1]
dat_test_labels  <- dat[430:569, 1]
knitr::kable(dat_test, digits = 4)
knitr::kable(dat_train, digits = 4)
test_pred <- knn(train = dat_train,
test = dat_test,
cl = dat_train_labels,
k = 21)
test_pred
xct = CrossTable(x = test_pred, y = dat_test_labels, prop.chisq = FALSE)
unlink("C:/Users/eduar/OneDrive - Instituto Tecnologico y de Estudios Superiores de Monterrey/Tec Monterrey Adm TI M/4. Analisis y minería de datos para la toma de desiciones/A3/A3 - FINAL2_cache", recursive = TRUE)
library(flexdashboard)
library(dplyr)
library(DT)
library(tidyverse)
library(viridis)
library(ggplot2)
library(readr)
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
library(DataExplorer)
df <- read.csv("C:\\Users\\eduar\\OneDrive - Instituto Tecnologico y de Estudios Superiores de Monterrey\\Tec Monterrey Adm TI M\\4. Analisis y minería de datos para la toma de desiciones\\A5\\car_dataset\\car_data.csv")
datos <- df %>%
rename(buying= vhigh,
maint=vhigh.1,
doors=X2,
persons=X2.1,
lug_boot=small,
safety=low,
clase=unacc)
sum(is.na(datos))
str(datos) %>%
knitr::kable()
da <- as.data.frame(unclass(datos),
stringsAsFactors = TRUE)
str(da) %>%
knitr::kable()
p0 <- da %>%
group_by(buying)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(buying)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Precio de compras", y = "Porcentaje")+
theme_classic()
p0 %>% plotly::ggplotly()
p0 <- da %>%
group_by(maint)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(maint)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Precio de mantenimiento", y = "Porcentaje")+
theme_classic()
p0 %>% plotly::ggplotly()
p1 <- da %>%
group_by(doors)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(doors)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Número de puertas", y = "Porcentaje")+
theme_classic()
p1 %>% plotly::ggplotly()
p2 <- da %>%
group_by(persons)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(persons)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=3))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Numero de personas", y = "Porcentaje")+
theme_classic()
p2 %>% plotly::ggplotly()
p3 <- da %>%
group_by(lug_boot)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(lug_boot)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=3))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Tamaño de maletero", y = "Porcentaje")+
theme_classic()
p3 %>% plotly::ggplotly()
p4 <- da %>%
group_by(safety)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(safety)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=3))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Tamaño de maletero", y = "Porcentaje")+
theme_classic()
p4 %>% plotly::ggplotly()
p5 <- da %>%
group_by(clase)%>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(clase)))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4))+
scale_y_continuous(labels = scales::percent)+
labs(x = "Tamaño de clase", y = "Porcentaje")+
theme_classic()
p5 %>% plotly::ggplotly()
p5 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
labs(x = "Clase", y = "Conteo")+
guides(fill = guide_legend(title = "Seguridad"))+
theme_classic()
p5 %>% plotly::ggplotly()
p8 <- da %>%
ggplot(mapping = aes(persons , fill = doors )) +
geom_bar(position = position_dodge()) +
labs(x = "Personas", y = "Puertas")+
guides(fill = guide_legend(title = "Seguridad"))+
theme_classic()
p8 %>% plotly::ggplotly()
p8 <- da %>%
ggplot(mapping = aes(fill=as.factor(doors),x=persons))+geom_density(alpha=0.3)
p8 %>% plotly::ggplotly()
p8 <- da %>%
ggplot(mapping = aes(doors,x=persons))+
geom_density(alpha=0.3)
p8 %>% plotly::ggplotly()
p8 <- da %>%
ggplot(mapping = aes(doors,x=persons))+
geom_density(alpha=0.3)
p8 %>% plotly::ggplotly()
p8 <- da %>%
ggplot(mapping = aes(fill=as.factor(doors),x=persons))+
geom_density(alpha=0.3)
p8 %>% plotly::ggplotly()
p7 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge(),fill = turbo(n=4)) +
labs(x = "Clase", y = "Conteo")+
guides(fill = guide_legend(title = "Seguridad"))+
theme_classic()
p7 %>% plotly::ggplotly()
p7 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge(),fill = turbo(n=8)) +
labs(x = "Clase", y = "Conteo")+
guides(fill = guide_legend(title = "Seguridad"))+
theme_classic()
p7 %>% plotly::ggplotly()
p7 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
labs(x = "Clase", y = "Conteo")+
guides(fill = guide_legend(title = "Seguridad"))+
theme_classic()
p7 %>% plotly::ggplotly()
p7 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
labs(x = "Clase", y = "Conteo")+
guides(fill = guide_legend(title = "Seguridad"))+
scale_fill_manual(values = c(turbo(n=2)))+
theme_classic()
p7 %>% plotly::ggplotly()
p7 <- da %>%
ggplot(mapping = aes(clase , fill = safety )) +
geom_bar(position = position_dodge()) +
labs(x = "Clase", y = "Conteo")+
guides(fill = guide_legend(title = "Seguridad"))+
scale_fill_manual(values = c(turbo(n=3)))+
theme_classic()
p7 %>% plotly::ggplotly()
p8 <- da %>%
ggplot(mapping = aes(fill=as.factor(doors),x=persons))+
geom_density(alpha=0.3)+
scale_fill_manual(values = c(turbo(n=4)))
p8 %>% plotly::ggplotly()
p8 <- da %>%
ggplot(mapping = aes(fill=as.factor(doors),x=persons))+
geom_density(alpha=0.3)+
labs(x = "Personas", y = "Densidad")+
guides(fill = guide_legend(title = "Puertas"))+
scale_fill_manual(values = c(turbo(n=4)))
p8 %>% plotly::ggplotly()
set.seed(777)
size <- floor(0.7*nrow(da))
dat_train <- new.da[1:429,]
set.seed(777)
size <- floor(0.7*nrow(da))
dat_train <- da[1:429,]
dat_test <- da[430:569,]
dat_train_labels <- da[1:429, 1]
dat_test_labels  <- da[430:569, 1]
set.seed(123)
size <- floor(0.7*nrow(da))
dat_train <- da[1:429,]
dat_test <- da[430:569,]
dat_train_labels <- da[1:429, 1]
dat_test_labels  <- da[430:569, 1]
View(dat_test)
set.seed(123)
size <- floor(0.7*nrow(da))
dat_train <- da[1:429,]
dat_test <- da[430:569,]
dat_train_labels <- da[1:429, 7]
dat_test_labels  <- da[430:569, 7]
